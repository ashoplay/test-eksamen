<!DOCTYPE html>
<html lang="no">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Nettverkskart - Kukkik Ano</title>
  <link rel="stylesheet" href="/css/styles.css">
  <script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>
  <style>
    .network-diagram-container {
      background-color: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      margin: 20px 0;
    }
    
    .mermaid {
      font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }
    
    .diagram-description {
      margin-top: 30px;
    }
    
    .component-list {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
      margin-top: 30px;
    }
    
    .component-card {
      background-color: #f8f9fa;
      border-radius: 8px;
      padding: 15px;
      border-left: 4px solid #3498db;
    }
    
    .component-card h3 {
      margin-top: 0;
      color: #3498db;
    }
  </style>
</head>
<body>
  <header class="header">
    <div class="container">
      <nav class="navbar">
        <div class="logo">Kukkik Ano</div>
        <ul class="nav-links" id="authLinks">
          <li><a href="/">Hjem</a></li>
          <li><a href="/login">Logg inn</a></li>
          <li><a href="/register">Registrer</a></li>
          <li><a href="/eiere">Eiere</a></li>
          <li><a href="/faq">FAQ</a></li>
          <li><a href="/kart">Kart</a></li>
          <li><a href="/nettverkskart">Nettverkskart</a></li>
          <li><a href="/databaseinfo">Database info</a></li>
        </ul>
        <ul class="nav-links" id="userLinks" style="display: none;">
          <li><a href="/">Hjem</a></li>
          <li><a href="/reinsdyr">Mine reinsdyr</a></li>
          <li><a href="/flokk">Mine flokker</a></li>
          <li><a href="/eiere">Eiere</a></li>
          <li><a href="/transactions">Transaksjoner</a></li>
          <li><a href="/faq">FAQ</a></li>
          <li><a href="/kart">Kart</a></li>
          <li><a href="/nettverkskart">Nettverkskart</a></li>
          <li><a href="/databaseinfo">Database info</a></li>
          <li><span id="username"></span></li>
          <li><a href="#" id="logoutBtn">Logg ut</a></li>
        </ul>
      </nav>
    </div>
  </header>
  
  <main class="main">
    <div class="container">
      <h1 class="page-title">Nettverkskart for Reinsdyr Registreringssystem</h1>
      
      <div class="card">
        <h2 class="card-title">Systemarkitektur</h2>
        
        <div class="network-diagram-container">
          <div class="mermaid">
            graph TD
                %% Client devices
                User[Bruker/Klient] -->|HTTP/HTTPS| WebServer
                
                %% Web server VM
                subgraph "VM1: [ditt_navn]-server-1"
                    WebServer[Nginx Web Server]
                    WebServer -->|Reverse Proxy| NodeApp
                    NodeApp[Node.js Applikation]
                    NodeApp -->|EJS Templates| WebServer
                    JWT[JWT Auth]
                    NodeApp <-->|Autentisering| JWT
                end
                
                %% Database VM
                subgraph "VM2: [ditt_navn]-database-2"
                    MongoDB[(MongoDB Database)]
                    MongoDB -->|Lagrer| UserData[Brukerdata]
                    MongoDB -->|Lagrer| ReinsdyrData[Reinsdyrdata]
                    MongoDB -->|Lagrer| FlokkData[Flokkdata]
                    MongoDB -->|Lagrer| OmradeData[Beiteområder]
                end
                
                %% Connection between VMs
                NodeApp <-->|Mongoose ODM| MongoDB
                
                %% External Connections
                Internet((Internet)) --> WebServer
                Admin[Administrator] -->|SSH| VM1
                Admin -->|SSH| VM2
                
                %% Firewall
                UFW1[UFW Firewall] -.->|Beskytter| VM1
                UFW2[UFW Firewall] -.->|Beskytter| VM2
                
                %% Components in Node.js app
                subgraph "Backend komponenter"
                    Controllers[Controllers]
                    Models[Models]
                    Routes[Routes]
                    Middleware[Middleware]
                end
                
                NodeApp -->|Bruker| Controllers & Models & Routes & Middleware
                
                %% Legend
                classDef server fill:#f9f,stroke:#333,stroke-width:2px
                classDef db fill:#9cf,stroke:#333,stroke-width:2px
                classDef client fill:#ff9,stroke:#333,stroke-width:2px
                classDef security fill:#f99,stroke:#333,stroke-width:2px
                
                class WebServer,NodeApp server
                class MongoDB,UserData,ReinsdyrData,FlokkData,OmradeData db
                class User,Admin client
                class JWT,UFW1,UFW2 security
          </div>
        </div>
        
        <div class="diagram-description">
          <p>Dette nettverkskartet viser den komplette arkitekturen for reinsdyrregistreringssystemet. Systemet er bygget på en to-VM-arkitektur med separate servere for applikasjon og database.</p>
          
          <h3>Hovedkomponenter</h3>
          
          <div class="component-list">
            <div class="component-card">
              <h3>VM1: Applikasjonsserver</h3>
              <ul>
                <li><strong>Nginx:</strong> Fungerer som web-server og reverse proxy</li>
                <li><strong>Node.js:</strong> Kjører applikasjonen med Express.js</li>
                <li><strong>JWT:</strong> Håndterer autentisering og autorisasjon</li>
              </ul>
            </div>
            
            <div class="component-card">
              <h3>VM2: Databaseserver</h3>
              <ul>
                <li><strong>MongoDB:</strong> Lagrer all applikasjonsdata</li>
                <li><strong>Samlinger:</strong> Brukerdata, Reinsdyrdata, Flokkdata, Beiteområdedata</li>
              </ul>
            </div>
            
            <div class="component-card">
              <h3>Sikkerhetskomponenter</h3>
              <ul>
                <li><strong>UFW Brannmurer:</strong> Beskytter begge VM-er</li>
                <li><strong>SSH-tilgang:</strong> For administratorer</li>
                <li><strong>JWT-tokens:</strong> Sikrer API-tilgang</li>
              </ul>
            </div>
            
            <div class="component-card">
              <h3>Backend-komponenter</h3>
              <ul>
                <li><strong>Controllers:</strong> Håndterer forretningslogikk</li>
                <li><strong>Models:</strong> Definerer datastrukturer</li>
                <li><strong>Routes:</strong> Definerer API-endepunkter</li>
                <li><strong>Middleware:</strong> Prosesserer forespørsler</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
      
      <div class="card" style="margin-top: 20px;">
        <h2 class="card-title">Implementasjonsdetaljer</h2>
        <p>Systemet er implementert med følgende teknologier:</p>
        <ul>
          <li><strong>Frontend:</strong> EJS-templates, HTML, CSS, JavaScript</li>
          <li><strong>Backend:</strong> Node.js, Express.js</li>
          <li><strong>Database:</strong> MongoDB med Mongoose ODM</li>
          <li><strong>Autentisering:</strong> JWT (JSON Web Tokens)</li>
          <li><strong>Web Server:</strong> Nginx som reverse proxy</li>
          <li><strong>Sikkerhet:</strong> bcrypt for passordkryptering, UFW brannmur, SSH-nøkkelautentisering</li>
        </ul>
        
        <p>Systemet er designet med best practices for sikkerhet og skalerbarhet:</p>
        <ul>
          <li>Separate virtualle maskiner for applikasjon og database</li>
          <li>Korrekt brannmurkonfigurasjon</li>
          <li>Reverse proxy-oppsett</li>
          <li>Ryddig intern organisering av applikasjonskomponenter</li>
        </ul>
      </div>
    </div>
  </main>
  
  <footer class="footer">
    <div class="container">
      <p>&copy; 2025 Kukkik Ano - Reinsdyrdatabase</p>
    </div>
  </footer>
  
  <script src="/js/scripts.js"></script>
  <script>
    // Initialize Mermaid
    mermaid.initialize({
      startOnLoad: true,
      theme: 'default',
      securityLevel: 'loose'
    });
  </script>
</body>
</html>